<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="using:System"
    xmlns:local="using:Nukepayload2.UI.UWP">

    <local:ValueEditorTemplateSelector x:Key="ValueEditorTemplateSelector"/>
    <local:DateTimeToOffsetConverter x:Key="DateConv"/>
    <!--用于编辑值的模板-->
    <DataTemplate x:Key="SByteEditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:SByte"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="Int16EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Int16"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="Int32EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Int32"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="Int64EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Int64"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="ByteEditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Byte"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="UInt16EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:UInt16"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="UInt32EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:UInt32"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="UInt64EditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:UInt64"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="SingleEditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Single"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DoubleEditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Double"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DecimalEditorDataTemplate">
        <StackPanel>
            <local:TypeValidatorTextBlock Value="{Binding}" ParseToType="sys:Decimal"/>
            <TextBox Text="{Binding Mode=TwoWay}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DateTimeEditorDataTemplate">
        <DatePicker Date="{Binding Mode=TwoWay,Converter={StaticResource DateConv}}"/>
    </DataTemplate>
    <DataTemplate x:Key="DateTimeOffsetEditorDataTemplate">
        <DatePicker Date="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="StringEditorDataTemplate">
        <TextBox Text="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="CharEditorDataTemplate">
        <TextBox MaxLength="1" Text="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="Vector2EditorDataTemplate">
        <local:Vector2Editor Value="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="Vector3EditorDataTemplate">
        <local:Vector3Editor Value="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="Vector4EditorDataTemplate">
        <local:Vector4Editor Value="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="ColorEditorDataTemplate">
        <local:ColorEditor Color="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="Matrix3x2EditorDataTemplate">
        <local:Matrix3x2Editor Value="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="Matrix4x4EditorDataTemplate">
        <local:Matrix4x4Editor Value="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="TimeSpanEditorDataTemplate">
        <TimePicker Time="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="BooleanEditorDataTemplate">
        <CheckBox IsChecked="{Binding Mode=TwoWay}"/>
    </DataTemplate>
    <DataTemplate x:Key="NullableValueEditorDataTemplate">
        <!-- TODO: 需要用户控件-->
        
    </DataTemplate>

    <!-- PropertySet 条目 -->
    <DataTemplate x:Key="PropertySetItemDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Name}"/>
            <ContentControl ContentTemplateSelector="{StaticResource ValueEditorTemplateSelector}"/>
        </Grid>
    </DataTemplate>
 
    <!-- PropertySet 编辑方式 -->
    <DataTemplate x:Key="PropertySetListDataTemplate">
        <ItemsControl ItemTemplate="{StaticResource PropertySetItemDataTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="PropertySemanticZoomDataTemplate">
        <SemanticZoom>
            <SemanticZoom.ZoomedInView>
                <ListView Name="inView" ItemsSource="{Binding Path=View}" ItemTemplate="{StaticResource PropertySetItemDataTemplate}">
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <!--用于显示列表头的数据项的模板-->
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Border Background="Blue">
                                        <TextBlock Foreground="White" Text="{Binding GroupName}" FontSize="26"></TextBlock>
                                    </Border>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                    <!--用于显示列表的数据项的模板-->
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <!-- 在这里放置GridView(或ListView)以表示缩小视图 -->
                <ListView Name="outView" ItemsSource="{Binding Path=View.CollectionGroups}">
                    <!--用于显示弹出的分组列表视图的数据项的模板-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Blue">
                                <TextBlock Foreground="White" Text="{Binding Group.GroupName}" FontSize="26"></TextBlock>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
    </DataTemplate>
</ResourceDictionary>
